<?php

/**
 * @file
 * Drupal.org API connector module.
 */

define('DRUPALORG_API_URL', 'https://www.drupal.org/api-d7/');

/**
 * Helper function to get data from jira instance.
 */
function drupalorg_api_call($url, $reset = FALSE) {
  $drupalorg_api_response = &drupal_static(__FUNCTION__);
  if ($reset OR !isset($drupalorg_api_response[$url])) {
    if (!$reset AND $cache = cache_get($url, 'cache_drupalorg_api')) {
      $drupalorg_api_response[$url] = $cache->data;
    }
    else {
      $drupalorg_api_response[$url] = NULL;
      // Maintain drupal_static memory of latest 100 calls only.
      if (count($drupalorg_api_response) > 100) {
        array_shift($drupalorg_api_response);
      }
      try {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, DRUPALORG_API_URL . $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
        $drupalorg_api_response[$url] = _drupalorg_api_call_execute($ch);
        cache_set($url, $drupalorg_api_response[$url], 'cache_drupalorg_api');
      }
      catch (DrupalorgApiException $e) {
        watchdog('drupalorg_api', $e->getMessage(), WATCHDOG_ERROR);
      }
    }
  }
  return $drupalorg_api_response[$url];
}


/**
 * Decodes cURL response.
 */
function _drupalorg_api_call_execute($ch) {
  $response = curl_exec($ch);
  $response_json_decoded = json_decode($response);
  $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
  curl_close($ch);
  if ($http_code != 200) {
    $error = array(
      'code' => $http_code,
      'response' => $response,
    );
    $error_message = json_encode($error);
    throw new DrupalorgApiException($error_message);
  }
  return $response_json_decoded;
}

/**
 * Get details about project using machine name of the project.
 */
function drupalorg_api_get_project($machine_name) {
  $response = drupalorg_api_call('node.json?field_project_machine_name=' . $machine_name);
  return isset($response->list[0]) ? $response->list[0] : NULL;
}
